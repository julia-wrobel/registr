// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// expectedScores
List expectedScores(arma::vec Y, arma::vec mu, arma::mat psi, arma::mat theta, arma::mat theta_quad);
RcppExport SEXP _registr_expectedScores(SEXP YSEXP, SEXP muSEXP, SEXP psiSEXP, SEXP thetaSEXP, SEXP theta_quadSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta_quad(theta_quadSEXP);
    rcpp_result_gen = Rcpp::wrap(expectedScores(Y, mu, psi, theta, theta_quad));
    return rcpp_result_gen;
END_RCPP
}
// expectedXi
std::vector<double> expectedXi(arma::mat theta, arma::vec mu, arma::vec mi, arma::mat psi, arma::mat Ci);
RcppExport SEXP _registr_expectedXi(SEXP thetaSEXP, SEXP muSEXP, SEXP miSEXP, SEXP psiSEXP, SEXP CiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mi(miSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ci(CiSEXP);
    rcpp_result_gen = Rcpp::wrap(expectedXi(theta, mu, mi, psi, Ci));
    return rcpp_result_gen;
END_RCPP
}
// lambdaF
double lambdaF(double x);
RcppExport SEXP _registr_lambdaF(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(lambdaF(x));
    return rcpp_result_gen;
END_RCPP
}
// squareTheta
arma::mat squareTheta(arma::vec xi, arma::mat theta);
RcppExport SEXP _registr_squareTheta(SEXP xiSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(squareTheta(xi, theta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_registr_expectedScores", (DL_FUNC) &_registr_expectedScores, 5},
    {"_registr_expectedXi", (DL_FUNC) &_registr_expectedXi, 5},
    {"_registr_lambdaF", (DL_FUNC) &_registr_lambdaF, 1},
    {"_registr_squareTheta", (DL_FUNC) &_registr_squareTheta, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_registr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
